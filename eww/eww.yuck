(defpoll time :interval "1s" "date '+%H:%M:%S'")
(defpoll date :interval "1h" "date '+%a %d.%m'")
(defpoll day :interval "20h" "date '+%d'")
(defpoll year :interval "20h" "date '+%Y'")

(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww")
(defvar time_rev false)

(deflisten workspace "scripts/workspace")

(defwidget bar []
  (centerbox :orientation "h"
    "asdf"
    (workspaces)
    (sidestuff)
  )
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric 
      :label "ðŸ”Š"
      :value volume
      :onchange "amixer -D pulse sset Master {}%")
    (clock)
  )
)

(defpoll volume :interval "1s"
  "scripts/getvol")

(defwidget clock []
  (eventbox 
    :onhover "${eww} update time_rev=true"
    :onhoverlost "${eww} update time_rev=false"
    (button
      :onclick "scripts/pop calendar"
      (box
        :class "module"
        :space-evenly false
        :orientation "h"
        :spacing 3
        (label :text time)
        (revealer 
          :transition "slideleft" 
          :reveal time_rev 
          :duration "350ms" 
          date
        )
      )
    )
  )
)

(defwidget cal []
	(box 
    :class "cal" 
    :orientation "v"
	  (box 
      :class "cal-in"
	    (calendar 
        :class "cal" 
		    :day day 
		    :year year
      )
    )
  )
)

(defwindow calendar
  :monitor 1
	:geometry (
    geometry  :x "10px" 
						  :y "10px" 
              :anchor "top right"
						  :width "270px" 
						  :height "60px")
  (cal)
)

(defwidget workspaces []
  (box 
    :orientation "h"
    :space-evenly false
    :halign "start"
    :class "workspace"
    (literal :content workspace)
  )
)

(defwidget metric [label value onchange]
  (box 
    :orientation "h"
    :class "metric"
    :space-evenly false
    (box :class "label" label)
    (scale 
      :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange)))

(defwindow bar
  :monitor 1
  :windowtype "toolbar"
  :exclusive true
  :geometry (
    geometry  :x "0%"
              :y "0%"
              :width "100%"
              :height "32px"
              :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar)
)

;;;;;;;;;;;;;;;;;;;;;Dashboard;;;;;;;;;;;;;;;;;;;;;

;Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)

(defwindow dashboard 
  :monitor 1
  :stacking "overlay"
	:wm-ignore false
  :exclusive true
  :geometry (
    geometry  :x "1470px"
              :y "420px"
              :width "1200px"
              :height "800px"
              :anchor "center")
  (dashboard)
)

(defwidget dashboard []
  (box 
    :class "dashboard"
    (box
      :class "item1"
      (box
        :class "profile"
        "profile")
      (box
        :class "spotify"
        "spotify"))
    (box)
  )
)

; profile
(defwindow profile
  :stacking "fg"
  :focusable "false"
  :monitor 1
	:geometry (
    geometry  :x 150
              :y 150
              :width 350
              :height 440)
	(profile)
)

(defwidget profile []
  (box)
)

; music
(defwindow music
  :stacking "fg"
  :focusable "false"
  :monitor 1
	:geometry (
    geometry  :x 515
              :y 490
              :width 610
              :height 280)
	(music)
)

;; Music
(defwidget music [] 
	(box :class "genwin" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false" 
		(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
		(box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
			(label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
			(label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
			(box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" 
				(button :class "btn_prev" :onclick "scripts/music_info --prev" "ï¦­")
				(button :class "btn_play" :onclick "scripts/music_info --toggle" STATUS)
				(button :class "btn_next" :onclick "scripts/music_info --next" "ï¦¬"))
			(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" 
				(scale :onscroll "mpc -q seek +1" :min 0 :active "true" :max 100 :value CURRENT)))))
