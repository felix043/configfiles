(defpoll time :interval "1s" "date '+%H:%M:%S'")
(defpoll date :interval "1h" "date '+%a %d.%m'")
(defpoll day :interval "20h" "date '+%d'")
(defpoll year :interval "20h" "date '+%Y'")

(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww")
(defvar time_rev false)

(deflisten workspace "scripts/workspace")

(defwidget bar []
  (centerbox :orientation "h"
    (music)
    (workspaces)
    (sidestuff)
  )
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric 
      :label "ðŸ”Š"
      :value volume
      :onchange "amixer -D pulse sset Master {}%")
    (clock)
  )
)

(defwidget clock []
  (eventbox 
    :onhover "${eww} update time_rev=true"
    :onhoverlost "${eww} update time_rev=false"
    (button
      :onclick "scripts/pop calendar"
      (box
        :class "module"
        :space-evenly false
        :orientation "h"
        :spacing 3
        (label :text time)
        (revealer 
          :transition "slideleft" 
          :reveal time_rev 
          :duration "350ms" 
          date
        )
      )
    )
  )
)

(defwidget cal []
	(box 
    :class "cal" 
    :orientation "v"
	  (box 
      :class "cal-in"
	    (calendar 
        :class "cal" 
		    :day day 
		    :year year
      )
    )
  )
)

(defwindow calendar
  :monitor 1
	:geometry (
    geometry  :x "10px" 
						  :y "10px" 
              :anchor "top right"
						  :width "270px" 
						  :height "60px")
  (cal)
)

(defwidget workspaces []
  (box 
    :orientation "h"
    :space-evenly false
    :halign "start"
    :class "workspace"
    (literal :content workspace)
  )
)

(defwidget music []
  (box 
    :class "music"
    :orientation "h"
    :space-evenly false
    :halign "start"
    {music != "" ? "ðŸŽµ${music}" : ""}))

(defwidget metric [label value onchange]
  (box 
    :orientation "h"
    :class "metric"
    :space-evenly false
    (box :class "label" label)
    (scale 
      :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange)))


(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defwindow bar
  :monitor 1
  :windowtype "toolbar"
  :exclusive true
  :geometry (
    geometry  :x "0%"
              :y "0%"
              :width "100%"
              :height "32px"
              :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))

